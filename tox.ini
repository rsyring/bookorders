[tox]
envlist = py34,flake8

[testenv]
# all pip install commands should look for packages ONLY from the wheelhouse.
setenv =
    PIP_USE_WHEEL=true
    PIP_NO_INDEX=true
    PIP_FIND_LINKS=requirements/wheelhouse
    HLLAPI_CONFIG_PROFILE=TestProfile
# Ignore all "not installed in testenv" warnings.
whitelist_externals = *
# This uses pip -e, which we want b/c this is an application and we aren't using an sdist for
# deployment.
usedevelop = true
# Always recreate the virtualenv so that we are confident dependencies are specified correctly.
# This is a bit slow, but due to the wheelhouse, it shouldn't be a lot slower.
recreate = true
commands =
    # install deps ourself from the wheelhouse.
    pip install -r requirements/ci-env.txt
    py.test -q --tb native --strict --cov bookorders --cov-report xml --no-cov-on-fail --junit-xml=.pytests.xml bookorders

[testenv:flake8]
basepython = python3
skip_install = true
usedevelop = false
deps = flake8
commands = flake8 bookorders

[flake8]
max-line-length = 100
exclude=.git,.hg,.tox,dist,doc,*egg,build

[testenv:coveralls]
skip_install = true
usedevelop = false
deps = coveralls
setenv =
    COVERALLS_REPO_TOKEN=tEPjLBJOfprQd1RSOeuC8x4vWyUaVbVup
commands = coveralls

[testenv:shippable-results]
skip_install = true
usedevelop = false
commands =
    mkdir -p shippable/codecoverage shippable/testresults
    mv .pytests.xml shippable/testresults
    # Make sure coverage.xml is present.  It might not be if we had failing tests.
    touch coverage.xml
    mv coverage.xml shippable/codecoverage

[testenv:postgres-prep]
skip_install = true
usedevelop = false
commands =
    sudo service postgresql start
    bash -c "until psql -U postgres -c 'create database testdb'; do echo 'trying again'; sleep 2; done"
